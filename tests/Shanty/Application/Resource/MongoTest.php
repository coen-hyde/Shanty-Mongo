<?php

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-04-19 at 18:56:45.
 */
class Shanty_Application_Resource_MongoTest extends PHPUnit_Framework_TestCase {

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        // Because Zend Framework uses Zend_Application_Bootstrap_BootstrapAbstract(line 680 ~ 692)
        // to create the instances of Plugin Resource 'foo', which declared with
        // 'resources.foo' in config files. I don't create the instance of 
        // Shanty_Application_Resource_Mongo directly.
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers Shanty_Application_Resource_Mongo::init
     * @todo   Implement testInit().
     */
    public function testInit_SingleHost() {
        $config = new Zend_Config_Ini(__DIR__ . '/config.ini', 'SingleHost');        
        $application = new Zend_Application('SingleHost', $config);
        $application->bootstrap();
        
        $connection = Shanty_Mongo::getWriteConnection();
        
        $hosts = $connection->getHosts();
        self::assertCount(1, $hosts);
        self::assertEquals($config->resources->mongo->host, $hosts[0]['host']);
        self::assertEquals($config->resources->mongo->port, $hosts[0]['port']);
    }
    
    /**
     * @covers Shanty_Application_Resource_Mongo::init
     * @todo   Implement testInit().
     */
    public function testInit_SingleMasterSingleSlave() {
        $config = new Zend_Config_Ini(__DIR__ . '/config.ini', 'SingleMasterSingleSlave');        
        $application = new Zend_Application('SingleMasterSingleSlave', $config);
        $application->bootstrap();
        
        $readConnection = Shanty_Mongo::getReadConnection();
        $writeConnection = Shanty_Mongo::getWriteConnection();
        
        self::assertEquals($config->resources->mongo->slave->database, $readConnection->getDatabase());
        $hosts = $readConnection->getHosts();
        
        self::assertCount(1, $hosts);
        self::assertEquals($config->resources->mongo->slave->host, $hosts[0]['host']);
        self::assertEquals($config->resources->mongo->slave->port, $hosts[0]['port']);
    }

}
